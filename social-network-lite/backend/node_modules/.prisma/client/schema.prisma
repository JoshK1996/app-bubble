// Social Network Lite - Prisma Schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model - represents users in the social network
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  fullName  String
  bio       String?
  avatarUrl String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  posts     Post[]   @relation("UserPosts")
  followers Follow[] @relation("UserFollowers")
  following Follow[] @relation("UserFollowing")

  @@map("users")
}

// Post model - represents user posts in the social network
model Post {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId String
  user   User   @relation("UserPosts", fields: [userId], references: [id], onDelete: Cascade)

  @@map("posts")
}

// Follow model - represents follow relationships between users
model Follow {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  // Relations
  followerId  String
  followingId String
  follower    User   @relation("UserFollowers", fields: [followerId], references: [id], onDelete: Cascade)
  following   User   @relation("UserFollowing", fields: [followingId], references: [id], onDelete: Cascade)

  // Ensure unique follower-following relationship
  @@unique([followerId, followingId])
  @@map("follows")
}

// Role enum - defines possible user roles
enum Role {
  USER
  ADMIN
}
