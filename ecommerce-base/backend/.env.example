# Environment variables for E-commerce Base Backend
# Copy this file to .env and fill in the values.

# Application Environment
# NODE_ENV=(development | production | test)
NODE_ENV=development

# Server Configuration
# PORT=Your preferred port (e.g., 4001 to avoid conflict if running other bubbles)
PORT=4001

# Database Configuration
# DATABASE_TYPE=(postgres | mongo | memory) # Select the database type
# - 'postgres' requires DATABASE_URL
# - 'mongo' requires MONGO_URI
# - 'memory' uses an in-memory store (for dev/test only, data is not persisted)
DATABASE_TYPE=memory

# PostgreSQL Connection URL (only required if DATABASE_TYPE=postgres)
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=public
DATABASE_URL=

# MongoDB Connection URL (only required if DATABASE_TYPE=mongo)
# Format: mongodb://USER:PASSWORD@HOST:PORT/DATABASE?authSource=admin
# Or: mongodb+srv://USER:PASSWORD@CLUSTER_HOST/DATABASE?retryWrites=true&w=majority
MONGO_URI=

# JWT Authentication Configuration
# IMPORTANT: Use a strong, unique secret in production (at least 32 characters)
JWT_SECRET=replace-this-with-a-strong-ecommerce-secret-key
# JWT_EXPIRES_IN=Token expiration time (e.g., 1d, 7d, 1h, 30m)
JWT_EXPIRES_IN=1d

# CORS Configuration (Optional)
# Allow requests from specific origins (e.g., your frontend URL)
# Separate multiple origins with commas (no spaces)
# Example: CORS_ORIGIN=http://localhost:5173,https://your-frontend.com
# CORS_ORIGIN=

# Logging Level (Optional)
# LOG_LEVEL=(error | warn | info | http | debug) - Defaults controlled by NODE_ENV if not set
# LOG_LEVEL= 